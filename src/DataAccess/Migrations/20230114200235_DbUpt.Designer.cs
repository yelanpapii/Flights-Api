// <auto-generated />
using DataAccess.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(BackendTestContext))]
    [Migration("20230114200235_DbUpt")]
    partial class DbUpt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("DataAccess.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Destination")
                        .HasColumnType("text");

                    b.Property<string>("Origin")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("TransportId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TransportId" }, "IX_Flights_TransportId");

                    b.ToTable("flights");
                });

            modelBuilder.Entity("DataAccess.Models.Journey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Destination")
                        .HasColumnType("text");

                    b.Property<string>("Origin")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("journeys");
                });

            modelBuilder.Entity("DataAccess.Models.Journeyflight", b =>
                {
                    b.Property<int>("IdFlight")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_flight");

                    b.Property<int>("IdJourney")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_journey");

                    b.HasIndex(new[] { "IdFlight" }, "journeyflights_flights_fk");

                    b.HasIndex(new[] { "IdJourney" }, "journeyflights_journeys_fk");

                    b.ToTable("journeyflights");
                });

            modelBuilder.Entity("DataAccess.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("FlightCarrier")
                        .HasColumnType("text");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("transports");
                });

            modelBuilder.Entity("FlightJourney", b =>
                {
                    b.Property<int>("FlightsId")
                        .HasColumnType("int(11)");

                    b.Property<int>("JourneysId")
                        .HasColumnType("int(11)");

                    b.HasKey("FlightsId", "JourneysId");

                    b.HasIndex("JourneysId");

                    b.ToTable("FlightJourney");
                });

            modelBuilder.Entity("DataAccess.Models.Flight", b =>
                {
                    b.HasOne("DataAccess.Models.Transport", "Transport")
                        .WithMany()
                        .HasForeignKey("TransportId")
                        .HasConstraintName("FK_Flights_Transports_TransportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("DataAccess.Models.Journeyflight", b =>
                {
                    b.HasOne("DataAccess.Models.Flight", "IdFlightNavigation")
                        .WithMany()
                        .HasForeignKey("IdFlight")
                        .HasConstraintName("journeyflights_flights_fk")
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Journey", "IdJourneyNavigation")
                        .WithMany()
                        .HasForeignKey("IdJourney")
                        .HasConstraintName("journeyflights_journeys_fk")
                        .IsRequired();

                    b.Navigation("IdFlightNavigation");

                    b.Navigation("IdJourneyNavigation");
                });

            modelBuilder.Entity("FlightJourney", b =>
                {
                    b.HasOne("DataAccess.Models.Flight", null)
                        .WithMany()
                        .HasForeignKey("FlightsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Journey", null)
                        .WithMany()
                        .HasForeignKey("JourneysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
